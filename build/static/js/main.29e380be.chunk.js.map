{"version":3,"sources":["viewHeightScrollfix.js","components/Graph.jsx","sections/WorkSection.jsx","sections/ContactSection.jsx","sections/AboutSection.jsx","components/Navbar.jsx","serviceWorker.js","index.jsx","App.jsx"],"names":["appHeight","document","documentElement","style","setProperty","window","innerHeight","addEventListener","Graph","className","width","height","viewBox","version","x1","y1","x2","y2","id","stopColor","offset","stroke","strokeWidth","fill","fillRule","d","WorkSection","useState","infoOpen","setInfoOpen","href","icon","faGithub","onClick","onKeyDown","aria-checked","role","tabIndex","ContactSection","faLinkedinIn","AboutSection","Navbar","activeClass","to","spy","smooth","duration","Boolean","location","hostname","match","ReactDOM","render","Date","getFullYear","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29e380be.chunk.js","sourcesContent":["const appHeight = () => {\n  const doc = document.documentElement;\n  doc.style.setProperty('--app-height', `${window.innerHeight}px`);\n};\nwindow.addEventListener('resize', appHeight);\nappHeight();\n","import React from 'react';\nimport './Graph.scss';\n\nexport default function Graph() {\n  return (\n    <div className=\"graph__wrapper\">\n      <div className=\"coordinates\">\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n        <span />\n      </div>\n      <svg width=\"85%\" height=\"107px\" viewBox=\"0 0 315 107\" version=\"1.1\">\n        <defs>\n          <linearGradient x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"100%\" id=\"linearGradient-1\">\n            <stop stopColor=\"#2090F8\" offset=\"0%\" />\n            <stop stopColor=\"#01FCE4\" offset=\"41.7610013%\" />\n            <stop stopColor=\"#0BFF8C\" offset=\"78.6870217%\" />\n            <stop stopColor=\"#89E393\" offset=\"100%\" />\n          </linearGradient>\n        </defs>\n        <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M2.10546875,95.75 L40.5546875,68.3476562 L55.2109375,81.1796875 L65.2148437,76.3945312 L96.1835937,86.8320312 L131.023438,19.9414062 L142.15625,23.7226562 L183.605469,2.1953125 L211.007812,22.3320312 L234.320312,71.5664062 L234.667969,83.0039062 L244.019531,83.0039062 L247.105469,88.8320312 L312.695312,104.839844\"\n            id=\"Path-1\"\n            stroke=\"url(#linearGradient-1)\"\n            strokeWidth=\"4\"\n            className=\"path\"\n          />\n        </g>\n      </svg>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './WorkSection.scss';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Graph from '../components/Graph';\n\nexport default function WorkSection() {\n  const [infoOpen, setInfoOpen] = useState(true);\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-xs-7\">\n          <div className=\"work-image-box\">\n            {infoOpen && (\n              <div>\n                <Graph />\n              </div>\n            )}\n            {!infoOpen && (\n              <div className=\"project-info\">\n                <p>Proof of concept to visualize rated CDRs on a heat and world map.</p>\n                <p>Main technologies: Scala, Angular, Grafana, Graphite, Cassandra, Spark</p>\n                <a href=\"https://github.com/qvantel/orcd\">\n                  <FontAwesomeIcon icon={faGithub} />\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-xs-5\">\n          <div className=\"work-info-box\">\n            <div className=\"project-name\">orcD</div>\n            <div\n              className=\"read-more\"\n              onClick={() => setInfoOpen(!infoOpen)}\n              onKeyDown={() => setInfoOpen(!infoOpen)}\n              aria-checked={infoOpen}\n              role=\"switch\"\n              tabIndex={0}\n            >\n              {infoOpen && <div>read more</div>}\n              {!infoOpen && <div>hide</div>}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-5\">\n          <div className=\"work-info-box\">\n            <div className=\"project-name\">foodi</div>\n          </div>\n        </div>\n        <div className=\"col-xs-7\">\n          <div className=\"work-image-box\">\n            <div className=\"work-info-box\">coming soon</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './ContactSection.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\n\nexport default function ContactSection() {\n  return (\n    <div>\n      <p>\n        If you didnâ€™t manage to contact me by the preferred ways of smoke signals or posting a cat\n        picture on reddit, here are some alternative ways of contacting me\n      </p>\n      <div className=\"links\">\n        <a href=\"mailto:robin@flygare.me\">robin@flygare.me</a>\n        <a href=\"https://github.com/flygare/\">\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n        <a href=\"https://www.linkedin.com/in/robinflygare/\">\n          <FontAwesomeIcon icon={faLinkedinIn} />\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './AboutSection.scss';\n\nexport default function AboutSection() {\n  return (\n    <div>\n      <div className=\"this-is\">Software Engineer</div>\n      <div className=\"name\">Robin Flygare</div>\n      <p>\n        Graduated at BTH with a bachelors degree in Software Engineering in 2017. Interested in just\n        about everything that has to do with software and always on the lookout for new things to\n        learn.\n      </p>\n      <p>\n        Currently working to make the school hip with technologies such as GraphQL, Vue and Java at\n        {' '}\n        <a href=\"https://www.ist.com\">IST</a>\n. Before IST I spent the summer working at\n        {' '}\n        <a href=\"https://www.qvantel.com\">Qvantel</a>\n, creating a PoC using primarily Scala, Grafana\n        and the Elastic stack.\n      </p>\n      <p>\n        Previously worked on multiple school projects with customers like Qvantel (which you can\n        read more about in the Orcd work section),\n        {' '}\n        <a href=\"https://www.softhouse.se\">Softhouse</a>\n        {' '}\n        creating an cable-viewing iOS app and creating an indoor navigation app at\n        <a href=\"https://www.bth.se\"> BTH</a>\n        {' '}\nfor Google Glass.\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Navbar.scss';\nimport { Link } from 'react-scroll';\n\nexport default function Navbar() {\n  return (\n    <div className=\"nav\">\n      <ul className=\"nav-ul\">\n        <li>\n          <Link\n            className=\"nav-link\"\n            activeClass=\"active\"\n            to=\"about\"\n            spy\n            smooth\n            offset={0}\n            duration={500}\n          >\n            About\n          </Link>\n        </li>\n        <li>\n          <Link\n            className=\"nav-link\"\n            activeClass=\"active\"\n            to=\"work\"\n            spy\n            smooth\n            offset={0}\n            duration={500}\n          >\n            Work\n          </Link>\n        </li>\n        <li>\n          <Link\n            className=\"nav-link\"\n            activeClass=\"active\"\n            to=\"contact\"\n            spy\n            smooth\n            offset={0}\n            duration={500}\n          >\n            Contact\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.scss';\nimport 'flexboxgrid';\nimport WorkSection from './sections/WorkSection';\nimport ContactSection from './sections/ContactSection';\nimport AboutSection from './sections/AboutSection';\nimport Navbar from './components/Navbar';\nimport './viewHeightScrollfix';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"App-header\">\n        <div className=\"content\">\n          <div id=\"about\">\n            <AboutSection />\n          </div>\n          <div id=\"work\">\n            <div className=\"subtitle\">Work</div>\n            <WorkSection />\n          </div>\n          <div id=\"contact\">\n            <div className=\"subtitle\">Contact</div>\n            <ContactSection />\n            <p id=\"legal\">\nRobin Flygare Â©\n              {` ${new Date().getFullYear()}`}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}